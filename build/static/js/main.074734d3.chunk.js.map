{"version":3,"sources":["nav.js","request.js","axios.js","banner.js","row.js","homescreen.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","useState","show","handleShow","transitionNavbar","window","scrollY","useEffect","addEventListener","removeEventListener","className","src","alt","API__KEY","request","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumantaries","instance","axios","create","baseURL","Banner","movie","setmovie","a","get","req","data","results","Math","floor","random","length","fetchdata","console","log","string","n","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","originaln_name","overview","substring","Row","fetchUrl","isLargRow","movies","setmovies","map","poster_path","id","Homescreen","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.074734d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './nav.css'\r\nconst Nav = () => {\r\n    const [show, handleShow] = useState(false);\r\n    const transitionNavbar = () => {\r\n        if (window.scrollY > 100) {\r\n            handleShow(true)\r\n\r\n        }\r\n        else {\r\n            handleShow(false)\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", transitionNavbar);\r\n        return () => window.removeEventListener(\"scroll\", transitionNavbar)\r\n    }, [])\r\n\r\n\r\n    return (<div className={`nav ${show && \"nav__black\"}`}>\r\n        <div className=\"nav__content\">\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://pngimg.com/uploads/netflix/netflix_PNG11.png\" alt=\"netflix\" />\r\n            <img\r\n                className=\"nav__avatar\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\" />\r\n        </div>\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Nav;","const API__KEY = \"b7d8b8208a6dc544ee2db7af05d34aee\"\r\nconst request = {\r\n    fetchTrending: `/trending/all/week?api_key=${API__KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API__KEY}&with_network=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API__KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API__KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API__KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API__KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API__KEY}&with_genres=10749`,\r\n    fetchDocumantaries: `/discover/movie?api_key=${API__KEY}&with_genres=99`,\r\n\r\n}\r\nexport default request","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3'\r\n\r\n\r\n})\r\n\r\nexport default instance","import React, { useEffect, useState } from 'react';\r\nimport './banner.css'\r\nimport req from './request'\r\nimport axios from './axios'\r\n\r\nconst Banner = () => {\r\n\r\n    const [movie, setmovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchdata = async () => {\r\n\r\n            const request = await axios.get(req.fetchNetflixOriginals)\r\n\r\n            setmovie(\r\n                request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n                ])\r\n            return request;\r\n        }\r\n        fetchdata()\r\n    }, [])\r\n\r\n\r\n    console.log(movie)\r\n\r\n\r\n    const trankate = (string, n) => {\r\n        return string?.length > n ? string.substring(0, n - 1) + '...' : string\r\n    }\r\n    return (<header className='banner'\r\n        style={{\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center center'\r\n        }}\r\n    >\r\n        <div className=\"banner__content\">\r\n            <h1 className=\"banner__title\">\r\n                {movie?.title || movie?.name || movie?.originaln_name}\r\n            </h1>\r\n            <div className=\"banner__buttons\">\r\n                <button\r\n                    className=\"banner__button\">\r\n                    Play\r\n                </button>\r\n                <button\r\n                    className=\"banner__button\">\r\n                    My Playlist\r\n                </button>\r\n            </div>\r\n            <h1\r\n                className=\"banner__discription\">\r\n                {trankate(movie?.overview, 150)}</h1>\r\n\r\n        </div>\r\n        <div className=\"banner__fadebottom\"></div>\r\n    </header>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport './row.css'\r\nconst Row = ({ title, fetchUrl, isLargRow = false }) => {\r\n    const [movies, setmovies] = useState([])\r\n    useEffect(() => {\r\n        const fetchdata = async () => {\r\n            const request = await axios.get(fetchUrl)\r\n            console.log(request.data.results)\r\n            setmovies(request.data.results);\r\n            return request\r\n        }\r\n        fetchdata()\r\n    }, [fetchUrl])\r\n\r\n    const baseurl = 'https://image.tmdb.org/t/p/original'\r\n\r\n\r\n    return (<div className=\"row\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row__posters\">\r\n            {movies.map(\r\n                (movie) => {\r\n                    if (movie.backdrop_path && movie.poster_path) {\r\n                        return (\r\n                            <img\r\n                                key={movie.id}\r\n                                className={`row__poster ${isLargRow && \"row__posterlarge\"}`}\r\n                                src={`${baseurl}${isLargRow ? movie.poster_path : movie.backdrop_path}`}\r\n                                alt={movie.name}\r\n                            />\r\n                        )\r\n                    }\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            )}\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport Nav from './nav'\r\nimport \"./homescreen.css\";\r\nimport Banner from './banner';\r\nimport req from './request'\r\nimport Row from './row'\r\n\r\nconst Homescreen = () => {\r\n    return (<div>\r\n        <Nav />\r\n        <Banner />\r\n\r\n        <Row\r\n            title=\"NETFLEX ORIGINALS\"\r\n            fetchUrl={req.fetchNetflixOriginals}\r\n            isLargRow\r\n        />\r\n        <Row\r\n            title=\"Trending Now\"\r\n            fetchUrl={req.fetchTrending}\r\n\r\n        />\r\n        <Row\r\n            title=\"Top Rated\"\r\n            fetchUrl={req.fetchTopRated}\r\n\r\n        />\r\n        <Row\r\n            title=\"Action Movies\"\r\n            fetchUrl={req.fetchActionMovies}\r\n\r\n        />\r\n        <Row\r\n            title=\"Comedy Movies\"\r\n            fetchUrl={req.fetchComedyMovies}\r\n\r\n        />\r\n\r\n        <Row\r\n            title=\"Horror Movies\"\r\n            fetchUrl={req.fetchHorrorMovies}\r\n\r\n        />\r\n\r\n        <Row\r\n            title=\"Romance Movies\"\r\n            fetchUrl={req.fetchRomanceMovies}\r\n\r\n        />\r\n        <Row\r\n            title=\"Documentaries\"\r\n            fetchUrl={req.fetchDocumantaries}\r\n\r\n        />\r\n\r\n    </div>);\r\n}\r\n\r\nexport default Homescreen;","\nimport './App.css';\nimport Homescreen from './homescreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Homescreen />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}